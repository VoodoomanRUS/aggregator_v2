openapi: 3.0.0
info:
  title: Loan aggregating api
  description: API для управления организациями и заявками на кредит
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1
    description: Dev server
paths:
  /organizations:
    get:
      summary: organizations list
      operationId: OrganizationsList
      responses:
        '200':
          description: List of all organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '204':
          description: No content
        '500':
          description: Internal server error
    post:
      summary: Create new organization
      operationId: CreateNewOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, email ]
              properties:
                name:
                  type: string
                  example: "Organization 1"
                email:
                  type: string
                  format: email
                  example: "org@example.com"
      responses:
        '201':
          description: Organization created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /organizations/by-uuid/{uuid}:
    get:
      summary: Find organization by UUID
      operationId: GetOrganizationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Organization found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid UUID
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    patch:
      summary: Update Organization by UUID
      operationId: UpdateOrganizationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatch'
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid UUID
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    delete:
      summary: Delete organization by UUID
      operationId: DeleteOrganizationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Organization removed successfully
        '400':
          description: Invalid UUID
        '404':
          description: Organization not found
        '500':
          description: Internal server error
  /organizations/by-name/{name}:
    get:
      summary: Find organization by name
      operationId: GetOrganizationByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid organization name
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    patch:
      summary: Update organization by name
      operationId: UpdateOrganizationByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationPatch'
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid name
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    delete:
      summary: Delete organization by name
      operationId: DeleteOrganizationByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization deleted successfully
        '400':
          description: Invalid name
        '404':
          description: Organization not found
        '500':
          description: Internal server error
  /users:
    get:
      summary: users list
      operationId: UsersList
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create new user
      operationId: CreateNewUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, email ]
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/by-uuid/{uuid}:
    get:
      summary: Find user by UUID
      operationId: GetUserByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid UUID
        '404':
          description: User not found
        '500':
          description: Internal server error
    patch:
      summary: Update User by UUID
      operationId: UpdateUserByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatch'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid UUID
        '404':
          description: User not found
        '500':
          description: Internal server error
    delete:
      summary: Delete user by UUID
      operationId: DeleteUserByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User deleted successfully
        '400':
          description: Invalid UUID
        '404':
          description: User not found
        '500':
          description: Internal server error
  /users/by-email/{email}:
    get:
      summary: Find user by E-mail
      operationId: GetUserByEmail
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid e-mail
        '404':
          description: User not found
        '500':
          description: Internal server error
  /loan_applications:
    get:
      summary: Loan applications list
      operationId: LoanApplications
      parameters:
        - name: value
          in: query
          required: false
          schema:
            type: number
        - name: incoming_organization_uuid
          in: query
          required: false
          schema:
            type: string
        - name: issue_organization_uuid
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Список заявок
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanApplication'
        '404':
          description: Loan applications not found
        '500':
          description: Internal server error
    post:
      summary: Create new loan application
      operationId: CreateNewLoanApplication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ value, incoming_organization_uuid, issue_organization_uuid ]
              properties:
                value:
                  type: number
                  example: 1000.0
                incoming_organization_uuid:
                  type: string
                  format: uuid
                issue_organization_uuid:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Application created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  /loan_applications/by-incoming-organization-uuid/{incoming_organization_uuid}:
    get:
      summary: Find loan applications by incoming organization UUID
      operationId: GetLoanApplicationsByIncomingOrganizationUUID
      parameters:
        - name: incoming_organization_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Loan application list found by incoming organization UUID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid request
        '404':
          description: Applications not found
        '500':
          description: Internal server error
  /loan_applications/by-issue-organization-uuid/{issue_organization_uuid}:
    get:
      summary: Find loan applications by issue organization UUID
      operationId: GetLoanApplicationsByIssueOrganizationUUID
      parameters:
        - name: issue_organization_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Loan application list found by issue organization UUID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid request
        '404':
          description: Applications not found
        '500':
          description: Internal server error
  /loan_applications/by-uuid/{uuid}:
    get:
      summary: Find loan application by UUID
      operationId: GetLoanApplicationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Appllication found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid UUID
        '404':
          description: Application not found
        '500':
          description: Internal server error
    patch:
      summary: Update loan application by UUID
      operationId: UpdateLoanApplicationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationPatch'
      responses:
        '200':
          description: Loan application updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid UUID
        '404':
          description: Loan application not found
        '500':
          description: Internal server error
    delete:
      summary: Delete loan application by UUID
      operationId: DeleteLoanApplicationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Loan application deleted successfully
        '400':
          description: Invalid UUID
        '404':
          description: Loan application not found
        '500':
          description: Internal server error
components:
  schemas:
    Organization:
      type: object
      required:
        - uuid
        - name
        - email
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
    User:
      type: object
      required:
        - uuid
        - name
        - email
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
    LoanApplication:
      type: object
      required:
        - uuid
        - incoming_organization_uuid
        - issue_organization_uuid
      properties:
        uuid:
          type: string
          format: uuid
        value:
          type: number
          example: 1000.00
        incoming_organization_uuid:
          type: string
          format: uuid
          description: Incoming organization UUID
        issue_organization_uuid:
          type: string
          format: uuid
          description: Issue organization UUID
    OrganizationPatch:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
    UserPatch:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
    LoanApplicationPatch:
      type: object
      properties:
        value:
          type: number
        incoming_organization_uuid:
          type: string
          format: uuid
        issue_organization_uuid:
          type: string
          format: uuid