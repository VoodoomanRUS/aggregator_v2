openapi: 3.0.0
info:
  title: Loan aggregating api
  description: API для управления организациями и заявками на кредит
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1
    description: Dev server
paths:
  /organizations:
    get:
      summary: organizations list
      operationId: OrganizationsList
      responses:
        '200':
          description: List of all organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '204':
          description: No content
        '500':
          description: Internal server error
    post:
      summary: Создать новую организацию
      operationId: CreateNewOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, email ]
              properties:
                name:
                  type: string
                  example: "Огранизация 1"
      responses:
        '201':
          description: Organization created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /organizations/{uuid}:
    get:
      summary: Получить организацию по UUID
      operationId: GetOrganizationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Organization found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid UUID
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    patch:
      summary: Update Organization by UUID
      operationId: UpdateOrganizationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid UUID
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    delete:
      summary: Delete organization by UUID
      operationId: DeleteOrganizationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Organization removed successfully
        '400':
          description: Invalid UUID
        '404':
          description: Organization not found
        '500':
          description: Internal server error
  /organizations/{name}:
    get:
      summary: Получить организацию по name
      operationId: GetOrganizationByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Организация найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid organization name
        '404':
          description: Organization not found
        '500':
          description: Internal server error
    patch:
      summary: Update organization by name
      operationId: UpdateOrganizationByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
            description: Invalid name
        '404':
            description: Organization not found
        '500':
            description: Internal server error
    delete:
      summary: Delete organization by name
      operationId: DeleteOrganizationByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Organization deleted successfully
        '400':
          description: Invalid name
        '404':
          description: Organization not found
        '500':
          description: Internal server error
  /users:
    get:
      summary: Список пользователей
      operationId: UsersList
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Создать нового пользователя
      operationId: CreateNewUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ name, email ]
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/{uuid}:
    get:
      summary: Find user by UUID
      operationId: GetUserByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Пользователь найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid UUID
        '404':
          description: User not found
        '500':
          description: Internal server error
    patch:
      summary: Update User by UUID
      operationId: UpdateUserByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid UUID
        '404':
          description: User not found
        '500':
          description: Internal server error
    delete:
      summary: Delete user by UUID
      operationId: DeleteUserByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User deleted successfully
        '400':
          description: Invalid UUID
        '404':
          description: User not found
        '500':
          description: Internal server error
  /user/{email}:
    get:
      summary: Find user by E-mail
      operationId: GetUserByEmail
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid e-mail
        '404':
          description: User not found
        '500':
          description: Internal server error
  /loan_applicaions:
    get:
      summary: Loan applications list
      operationId: LoanApplications
      parameters:
        - name: value
          in: query
          required: false
          schema:
            type: number
        - name: incoming_organization_uuid
          in: query
          required: false
          schema:
            type: string
        - name: issue_organization_uuid
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Список заявок
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanApplication'
        '404':
          description: Loan applications not found
        '500':
          description: Internal server error
    post:
      summary: Создать новую заявку
      operationId: CreateNewLoanApplication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ value, incoming_organization_uuid, issue_organization_uuid ]
              properties:
                userName:
                  type: string
                organizationName:
                  type: string
      responses:
        '201':
          description: Заявка создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  /loan_applications/{incoming_organization_uuid}:
    get:
      summary: Find loan applications by incoming organization UUID
      operationId: GetLoanApplicationsByIncomingOrganizationUUID
      parameters:
        - name: incoming_organization_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Loan application list found by incoming organization UUID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid request
        '404':
          description: Applications not found
        '500':
          description: Internal server error
  /loan_applications/{issue_organization_uuid}:
    get:
      summary: Find loan applications by issue organization UUID
      operationId: GetLoanApplicationsByIssueOrganizationUUID
      parameters:
        - name: issue_organization_uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Loan application list found by issue organization UUID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid request
        '404':
          description: Applications not found
        '500':
          description: Internal server error
  /loan_applications/{uuid}:
    get:
      summary: Find loan application by UUID
      operationId: GetLoanApplicationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Appllication found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid UUID
        '404':
          description: Application not found
        '500':
          description: Internal server error
    patch:
      summary: Update loan application by UUID
      operationId: UpdateLoanApplicationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Loan application updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanApplication'
        '400':
          description: Invalid UUID
        '404':
          description: Loan application not found
        '500':
          description: Internal server error
    delete:
      summary: Delete loan application by UUID
      operationId: DeleteLoanApplicationByUUID
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Loan application deleted successfully
        '400':
          description: Invalid UUID
        '404':
          description: Loan application not found
        '500':
          description: Internal server error
components:
  schemas:
    Organization:
      type: object
      required:
        - uuid
        - name
        - email
      properties:
        uuid:
          type: string
          format: uuid
          example: 123123123
        name:
          type: string
          example: "Организация 1"
        email:
          type: string
          example: "x@x.x"
    User:
      type: object
      required:
        - uuid
        - name
        - email
      properties:
        uuid:
          type: string
          format: uuid
          example: "123123123"
        name:
          type: string
          example: "bla"
        email:
          type: string
          example: "x@x.x"
    LoanApplication:
      type: object
      required:
        - uuid
        - incoming_organization_uuid
        - issue_organization_uuid
      properties:
        uuid:
          type: string
          format: uuid
          example: "123123123"
        value:
          type: number
          example: "1000.00"
        incoming_organization_uuid:
          type: string
          format: uuid
          description: Клиент, оставивший заявку
          example: "123123123"
        issue_organization_uuid:
          type: string
          format: uuid
          description: Организация, обрабатывающая заявку
          example: "123123123"